<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal</title>
    <link>https://fmagno.github.io/me/</link>
    <description>Recent content on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jun 2023 19:00:00 +0100</lastBuildDate><atom:link href="https://fmagno.github.io/me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes basics - WIP</title>
      <link>https://fmagno.github.io/me/notes/kubernetes_basics/</link>
      <pubDate>Mon, 19 Jun 2023 19:00:00 +0100</pubDate>
      
      <guid>https://fmagno.github.io/me/notes/kubernetes_basics/</guid>
      <description>source code on github
Objective To showcase the basic components that comprise a kubernetes cluster.</description>
      <content>&lt;p&gt;&lt;a href=&#34;%22https://github.com/fmagno/kubernetes-exercises%22&#34;&gt;&lt;code&gt;source code on github&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;To showcase the basic components that comprise a kubernetes cluster.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Debugging a fastapi app</title>
      <link>https://fmagno.github.io/me/notes/debugging_fastapi_app/</link>
      <pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://fmagno.github.io/me/notes/debugging_fastapi_app/</guid>
      <description>source code on github
Objective Debug remotely a fastapi app with VSCode using the Debug Adapter Protocol (DAP).
Overview Matching host/container source code launch.json
{ &amp;#34;version&amp;#34;: &amp;#34;0.2.0&amp;#34;, &amp;#34;configurations&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Python: Remote Attach&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;python&amp;#34;, &amp;#34;request&amp;#34;: &amp;#34;attach&amp;#34;, &amp;#34;connect&amp;#34;: { &amp;#34;host&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;lt;-- pydebug hostname &amp;#34;port&amp;#34;: 5678 &amp;lt;-- pydebug port }, &amp;#34;pathMappings&amp;#34;: [ { &amp;#34;localRoot&amp;#34;: &amp;#34;${workspaceFolder}/dfa&amp;#34;, &amp;lt;-- path to the app (host) &amp;#34;remoteRoot&amp;#34;: &amp;#34;/dfa&amp;#34; &amp;lt;-- path to the app (container) } ], &amp;#34;justMyCode&amp;#34;: true } ] } Executing the app inside the container with debugpy Container entrypoint (/docker/local/api/start)</description>
      <content>&lt;p&gt;&lt;a href=&#34;%22https://github.com/fmagno/dfa%22&#34;&gt;&lt;code&gt;source code on github&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;Debug remotely a fastapi app with VSCode using the Debug Adapter Protocol (DAP).&lt;/p&gt;

&lt;img src=&#34;images/debugger.png&#34;  alt=&#34;vscode debugger.&#34;  class=&#34;left&#34;    /&gt;


&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;

&lt;img src=&#34;images/debug.png&#34;  alt=&#34;Components.&#34;  class=&#34;left&#34;    /&gt;


&lt;h2 id=&#34;matching-hostcontainer-source-code&#34;&gt;Matching host/container source code&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;launch.json&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.2.0&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;configurations&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Python: Remote Attach&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;request&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attach&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;connect&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pydebug&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;hostname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5678&lt;/span&gt;            &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pydebug&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pathMappings&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;localRoot&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${workspaceFolder}/dfa&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(host)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;remoteRoot&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/dfa&amp;#34;&lt;/span&gt;                      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(container)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;justMyCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;executing-the-app-inside-the-container-with-debugpy&#34;&gt;Executing the app inside the container with &lt;em&gt;debugpy&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Container entrypoint (&lt;code&gt;/docker/local/api/start&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watchmedo auto-restart --recursive -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    -- python -m debugpy --listen 0.0.0.0:5678 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    -m uvicorn app.main:app --host 0.0.0.0 --port &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt; --workers &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;debugging-demo&#34;&gt;Debugging demo&lt;/h2&gt;

&lt;img src=&#34;images/debugging.gif&#34;  alt=&#34;Demo.&#34;  class=&#34;left&#34;    /&gt;


</content>
    </item>
    
    <item>
      <title>Layered architecture of a REST API - WIP</title>
      <link>https://fmagno.github.io/me/notes/layered_architecture/</link>
      <pubDate>Fri, 09 Jun 2023 15:00:35 +0100</pubDate>
      
      <guid>https://fmagno.github.io/me/notes/layered_architecture/</guid>
      <description>How is the logic displaced across the various layers? Routing The routing layer serves as a bridge between the client making the request and the underlying functionality of the API. It is responsible for parsing the incoming requests, extracting relevant information such as the requested resource path, query parameters, and HTTP method (GET, POST, PUT, DELETE, etc.), and determining how to handle the request.
Services The services layer acts as a bridge between the routing layer and the underlying database or the API Client layers.</description>
      <content>&lt;h2 id=&#34;how-is-the-logic-displaced-across-the-various-layers&#34;&gt;How is the logic displaced across the various layers?&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;

&lt;img src=&#34;images/layers.png&#34;  alt=&#34;Layered architecture.&#34;  class=&#34;left&#34;    /&gt;


&lt;h3 id=&#34;routing&#34;&gt;Routing&lt;/h3&gt;
&lt;p&gt;The routing layer serves as a bridge between the client making the request and the underlying functionality of the API. It is responsible for parsing the incoming requests, extracting relevant information such as the requested resource path, query parameters, and HTTP method (GET, POST, PUT, DELETE, etc.), and determining how to handle the request.&lt;/p&gt;
&lt;h3 id=&#34;services&#34;&gt;Services&lt;/h3&gt;
&lt;p&gt;The services layer acts as a bridge between the routing layer and the underlying database or the API Client layers. Its primary purpose is to encapsulate the business logic and application-specific operations related to the API&amp;rsquo;s resources.&lt;/p&gt;
&lt;h3 id=&#34;database&#34;&gt;Database&lt;/h3&gt;
&lt;p&gt;It is responsible for storing, managing, and retrieving data from a database system.&lt;/p&gt;
&lt;h3 id=&#34;api-client&#34;&gt;API Client&lt;/h3&gt;
&lt;p&gt;The layer comprised of API clients to interact with external REST APIs can be referred to as the &amp;ldquo;API Client Layer&amp;rdquo; or the &amp;ldquo;Integration Layer.&amp;rdquo; It acts as an intermediary between your application and external services, allowing you to consume and interact with their RESTful APIs.&lt;/p&gt;
&lt;h2 id=&#34;schemas&#34;&gt;Schemas&lt;/h2&gt;
&lt;p&gt;Each layer should have its own set of schemas and the client of a given layer should only use the logic of that layer in conjunction with its set of schemas and none else. For example, let&amp;rsquo;s say &lt;code&gt;RouteA&lt;/code&gt; depends on &lt;code&gt;ServiceA&lt;/code&gt; to accomplish some task. In this scenario, &lt;code&gt;RouteA&lt;/code&gt; has to map all required schemas at the routing layer onto schemas of the service layer before calling routines of &lt;code&gt;ServiceA&lt;/code&gt;. The same would also apply if the service layer would use the data layer or an API Client.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;

&lt;img src=&#34;images/layers_mapping.png&#34;  alt=&#34;Layers mapping.&#34;  class=&#34;left&#34;    /&gt;


&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# app/user/schemas.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserCreate&lt;/span&gt;(BaseModel):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name: str
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    height: int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserRead&lt;/span&gt;(BaseModel):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id: uuid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;UUID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name: str
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    height: int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserRouteCreate&lt;/span&gt;(UserCreate):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserRouteRead&lt;/span&gt;(UserRead):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserSvcCreate&lt;/span&gt;(UserCreate):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserSvcRead&lt;/span&gt;(UserRead):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# app/user/routes.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pydantic &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; parse_obj_as
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; app.user.deps &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; get_user_service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; app.user.schemas &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserRouteCreate,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserRouteRead,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserSvcCreate,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserSvcRead,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; app.user.service &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; UserService
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@router.post&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_user&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_svc: UserService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Depends(get_user_service),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user: UserRouteCreate,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; UserRouteRead:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Create new user.&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_svc_read: UserSvcRead &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; user_svc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_user(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;parse_obj_as(UserSvcCreate, user),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; parse_obj_as(UserRouteRead, user_svc_read)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# app/user/deps.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; app.db.deps &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; get_db
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_user_service&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db: AsyncSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Depends(get_db),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; UserService:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_svc: UserService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; create_service(db&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;db)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; user_svc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# app/user/services.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserService&lt;/span&gt;(BaseService):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db: AsyncSession,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        super()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(db&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;db)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_user&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        user: UserSvcCreate,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; UserSvcRead:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        user_db: Optional[UserDb] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; crud_user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            db&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;db,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            obj_in&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;parse_obj_as(UserSvcCreate, user),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        user_svc_read &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse_obj_as(UserSvcRead, user_db)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; user_svc_read
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Facade #############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_user_service&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db: AsyncSession,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; UserService:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_svc: UserService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; UserService(db&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;db)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; user_svc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Francisco Magno</title>
      <link>https://fmagno.github.io/me/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fmagno.github.io/me/about/</guid>
      <description>flmagnom@gmail.com github stackoverflow linkedin
Howdy! Here&amp;rsquo;s a brief description of my work experience relevant to the engineering industry.
CoquetConsulting (2021 - present): Contractor, Portugal Delivering technical support to customers through an active and involved method. Providing solutions that range from boosting the pace of development to repairing faulty setups, integrating systems and converting large, complex structures into more manageable ones.
Technologies
python fastapi sqlalchemy 2.0 asyncio postgres typescript nestjs GKE kubernetes</description>
      <content>&lt;p&gt;&lt;code&gt;flmagnom@gmail.com&lt;/code&gt;
&lt;a href=&#34;https://github.com/fmagno&#34;&gt;&lt;code&gt;github&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://stackoverflow.com/users/9396198/fmagno&#34;&gt;&lt;code&gt;stackoverflow&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.linkedin.com/in/francisco-lu%C3%ADs-magno-morgado-781a23b/&#34;&gt;&lt;code&gt;linkedin&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;howdy&#34;&gt;Howdy!&lt;/h1&gt;
&lt;p&gt;Here&amp;rsquo;s a brief description of my work experience relevant to the engineering industry.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;coquetconsulting-2021---present-contractor-portugal&#34;&gt;CoquetConsulting (2021 - present): Contractor, Portugal&lt;/h2&gt;
&lt;p&gt;Delivering technical support to customers through an active and involved method. Providing solutions that range from boosting the pace of development to repairing faulty setups, integrating systems and converting large, complex structures into more manageable ones.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python&lt;/code&gt;
&lt;code&gt;fastapi&lt;/code&gt;
&lt;code&gt;sqlalchemy 2.0&lt;/code&gt;
&lt;code&gt;asyncio&lt;/code&gt;
&lt;code&gt;postgres&lt;/code&gt;
&lt;code&gt;typescript&lt;/code&gt;
&lt;code&gt;nestjs&lt;/code&gt;
&lt;code&gt;GKE&lt;/code&gt;
&lt;code&gt;kubernetes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Integrations&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.solarisgroup.com/en/about/&#34;&gt;&lt;code&gt;solaris:banking&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.squake.earth/&#34;&gt;&lt;code&gt;squake:co2 compensation&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.personio.com/&#34;&gt;&lt;code&gt;personio:hr&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.workday.com/&#34;&gt;&lt;code&gt;workday:hr&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://developer.fedex.com/api/en-us/home.html&#34;&gt;&lt;code&gt;fedex:shipment&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.shippypro.com/en/&#34;&gt;&lt;code&gt;shippy-pro:shipment&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://goshippo.com/&#34;&gt;&lt;code&gt;shippo:shipment&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://goshippo.com/&#34;&gt;&lt;code&gt;shopify:e-commerce&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Challenges&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;invoicing&lt;/code&gt;
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc6749#section-4.1&#34;&gt;&lt;code&gt;oauth2-auth code flow&lt;/code&gt;&lt;/a&gt;
&lt;code&gt;shopify-python async graphql client&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;unity-2017---2018-software-engineer-uk&#34;&gt;Unity (2017 - 2018): Software engineer, UK&lt;/h2&gt;
&lt;p&gt;Development of software services for provisioning and testing the Unity engine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;
&lt;code&gt;Python&lt;/code&gt;
&lt;code&gt;Openstack&lt;/code&gt;
&lt;code&gt;Docker&lt;/code&gt;
&lt;code&gt;raspberry pi&lt;/code&gt;
&lt;code&gt;gRPC&lt;/code&gt;
&lt;code&gt;NSQ&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;imagination-technologies-2012---2016-software-engineer-uk&#34;&gt;Imagination technologies (2012 - 2016): Software engineer, UK&lt;/h2&gt;
&lt;p&gt;Development of an asynchronous task scheduler and resource allocator for software/hardware validation.
Development of a framework to validate the IMG Rogue driver for the Onda V989 A80.
Responsible for the testplan design for hardware validation and coordination of
a small execution team based in India.
Development of a scalable and virtualised environment for software validation
(CI/CD).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;
&lt;code&gt;Django&lt;/code&gt;
&lt;code&gt;RPyC&lt;/code&gt;
&lt;code&gt;Xen&lt;/code&gt;
&lt;code&gt;KVM/QEMU&lt;/code&gt;
&lt;code&gt;Puppet&lt;/code&gt;
&lt;code&gt;Linux&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bullray-2011---2012-research-engineer-angola&#34;&gt;Bullray (2011 - 2012): Research engineer, Angola&lt;/h2&gt;
&lt;p&gt;Development of a gyro-stabilized gimbal.
Integration/dimensioning of an off-grid traffic enforcement surveillance system.
Integration of a costal surveillance/detection vehicle (Ural 4320).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LabVIEW&lt;/code&gt;
&lt;code&gt;C/C++&lt;/code&gt;
&lt;code&gt;Solidworks&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bosch-security-systems-2010---2011-qa-engineer-portugal&#34;&gt;Bosch Security Systems (2010 - 2011): QA engineer, Portugal&lt;/h2&gt;
&lt;p&gt;Development of testing devices/jigs for surveillance and communication
systems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LabVIEW&lt;/code&gt;
&lt;code&gt;Eagle-PCB design&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;telecommunications-institute-2009---2010-researcher-portugal&#34;&gt;Telecommunications Institute (2009 - 2010): Researcher, Portugal&lt;/h2&gt;
&lt;p&gt;Study and development of predistortion models for nonlinear power amplifiers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Matlab&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;education-university-of-aveiro-portugal&#34;&gt;Education: University of Aveiro, Portugal&lt;/h2&gt;
&lt;p&gt;MSc Electronics and Telecommunications Engineering&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Francisco Magno</title>
      <link>https://fmagno.github.io/me/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fmagno.github.io/me/home/</guid>
      <description>flmagnom@gmail.com github stackoverflow linkedin</description>
      <content>&lt;p&gt;&lt;code&gt;flmagnom@gmail.com&lt;/code&gt;
&lt;a href=&#34;https://github.com/fmagno&#34;&gt;&lt;code&gt;github&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://stackoverflow.com/users/9396198/fmagno&#34;&gt;&lt;code&gt;stackoverflow&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.linkedin.com/in/francisco-lu%C3%ADs-magno-morgado-781a23b/&#34;&gt;&lt;code&gt;linkedin&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://fmagno.github.io/me/projs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fmagno.github.io/me/projs/</guid>
      <description>SURL-short url Features
Creation/retrieval of short urls OAuth2 - authorisation code flow (github) Sessions management AsyncIO Highlights
REST API Swagger docs AsyncIO Fastapi/pydantic sqlalchemy 2.0/postgres Alembic - migrations management Docker compose pytest localtunnel NBAPP - Newton basins app Features
Submission/visualisation of nb fractals AsyncIO Data fetching Backend highlights
REST API Fastapi/pydantic sqlalchemy 2.0/postgres Alembic - migrations management Docker compose pytest tusd minio Frontend highlights
Typescript React Nextjs SWR cypress tailwind Debugging a fastapi app Features/technologies</description>
      <content>&lt;h1 id=&#34;surl-short-url-hahahugoshortcodes0hbhbhttpsgithubcomfmagnosurl&#34;&gt;&lt;a href=&#34;https://github.com/fmagno/surl&#34;&gt;SURL-short url &lt;style&gt;
      .ico {
        height: 1.15em;
        width: 1.15em;
        position: relative;
        top: 3px;
      }
      .ico-sm .ico {
        height: .8em;
        width: .8em;
      }
      .ico-md .ico {
        height: 1.5em;
        width: 1.5em;
      }
      .ico-xl .ico {
        height: 2em;
        width: 2em;
      }
      .ico-xxl .ico {
        height: 3em;
        width: 3em;
      }
  &lt;/style&gt;&lt;svg aria-hidden=&#34;true&#34; class=&#34;default ico ico-link &#34;  xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon icon-tabler icon-tabler-link&#34; width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;2&#34; stroke=&#34;currentColor&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
  &lt;path stroke=&#34;none&#34; d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;
  &lt;path d=&#34;M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5&#34; /&gt;
  &lt;path d=&#34;M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5&#34; /&gt;
&lt;/svg&gt;
&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Creation/retrieval of short urls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OAuth2 - authorisation code flow (github)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Sessions management&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AsyncIO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;REST API&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Swagger docs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AsyncIO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fastapi/pydantic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqlalchemy 2.0/postgres&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alembic - migrations management&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Docker compose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pytest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localtunnel&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;nbapp---newton-basins-app-hahahugoshortcodes1hbhbhttpsgithubcommagnobrothersnbapp&#34;&gt;&lt;a href=&#34;https://github.com/MagnoBrothers/nbapp&#34;&gt;NBAPP - Newton basins app &lt;svg aria-hidden=&#34;true&#34; class=&#34;default ico ico-link &#34;  xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon icon-tabler icon-tabler-link&#34; width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;2&#34; stroke=&#34;currentColor&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
  &lt;path stroke=&#34;none&#34; d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;
  &lt;path d=&#34;M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5&#34; /&gt;
  &lt;path d=&#34;M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5&#34; /&gt;
&lt;/svg&gt;
&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Submission/visualisation of nb fractals&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AsyncIO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data fetching&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Backend highlights&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;REST API&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fastapi/pydantic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqlalchemy 2.0/postgres&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alembic - migrations management&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Docker compose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pytest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tusd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minio&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Frontend highlights&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Typescript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;React&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Nextjs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SWR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cypress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tailwind&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;debugging-a-fastapi-app-hahahugoshortcodes2hbhbhttpsgithubcomfmagnodfa&#34;&gt;&lt;a href=&#34;https://github.com/fmagno/dfa&#34;&gt;Debugging a fastapi app &lt;svg aria-hidden=&#34;true&#34; class=&#34;default ico ico-link &#34;  xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon icon-tabler icon-tabler-link&#34; width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;2&#34; stroke=&#34;currentColor&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
  &lt;path stroke=&#34;none&#34; d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;
  &lt;path d=&#34;M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5&#34; /&gt;
  &lt;path d=&#34;M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5&#34; /&gt;
&lt;/svg&gt;
&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Features/technologies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Debug Adapter Protocol&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debugpy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VSCode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fastapi&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;kubernetes-exercises-hahahugoshortcodes3hbhbhttpsgithubcomfmagnokubernetes-exercises&#34;&gt;&lt;a href=&#34;https://github.com/fmagno/kubernetes-exercises&#34;&gt;Kubernetes exercises &lt;svg aria-hidden=&#34;true&#34; class=&#34;default ico ico-link &#34;  xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon icon-tabler icon-tabler-link&#34; width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;2&#34; stroke=&#34;currentColor&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
  &lt;path stroke=&#34;none&#34; d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;
  &lt;path d=&#34;M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5&#34; /&gt;
  &lt;path d=&#34;M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5&#34; /&gt;
&lt;/svg&gt;
&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Features/technologies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Setup deployment with a single command&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Kubernetes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minikube&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Helm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GNU Make&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
